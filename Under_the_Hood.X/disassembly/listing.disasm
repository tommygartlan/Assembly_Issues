Disassembly Listing for Under_the_Hood
Generated From:
F:/myusb/ES_proj/Mplabx/Assembly_Issues/Under_the_Hood.X/dist/default/production/Under_the_Hood.X.production.elf
Sep 8, 2018 12:38:50 PM

---  F:/myusb/ES_proj/Mplabx/Assembly_Issues/Under_the_Hood.X/machine_code.c  ---------------------------
1:             /***************************************************
2:             	Tommy Gartlan Sep 2012
3:             
4:             Looking at C to assembly translation and then to machine code
5:             
6:             *****************************************************/
7:             
8:             
9:             /*************************************************************
10:                Device Header File (Indirectly pulls in the pic18f4520.h
11:            *************************************************************/
12:            #include <xc.h>
13:            
14:            
15:            /*************************************************************
16:             Compiler Directive to tell he compiler what clock freq is being used
17:            *************************************************************/
18:            #define _XTAL_FREQ 19660800
19:            //#define _XTAL_FREQ 1
20:            
21:            /*************************************************************
22:             Function Prototypes
23:            *************************************************************/
24:            
25:            void Initial(void);
26:            void delay_1s(void);
27:            
28:            
29:            /*****************************************
30:              Global Variables
31:            ******************************************/
32:            
33:            
34:            
35:            /*****************************************
36:            				Macros
37:            ******************************************/
38:            
39:            /*****************************************
40:             			Main Program
41:            ******************************************/
42:            void main(void)
43:            {
44:            	unsigned char count = 0;
7FE4  0E00     MOVLW 0x0
7FE6  6E01     MOVWF __pcstackCOMRAM, ACCESS
45:            	Initial();                    //Function
7FE8  ECEA     CALL 0x7FD4, 0
7FEA  F03F     NOP
46:            	
47:            	//foreground program
48:            	
49:            	TRISB = 0x00;       //clrf 0x93
7FEC  0E00     MOVLW 0x0
7FEE  6E93     MOVWF TRISB, ACCESS
50:            	LATB = 0x01;		//movlw 0x01
7FF0  0E01     MOVLW 0x1
7FF2  D004     BRA 0x7FFC
51:            						//movwf 0x81
52:            	
53:            	
54:            	while(1)
55:            	{
56:            		//delay_1s();
57:                    LATB = 0x55;
7FF4  0E55     MOVLW 0x55
7FF6  6E8A     MOVWF LATB, ACCESS
58:            		
59:                    count++;
7FF8  2A01     INCF __pcstackCOMRAM, F, ACCESS
60:            		//delay_1s();
61:                    LATB = 0xAA;
7FFA  0EAA     MOVLW 0xAA
7FFC  6E8A     MOVWF LATB, ACCESS
62:            	}
63:            		
64:            	
65:            	
66:            }
67:            
68:            
69:            /************************************************
70:             				Initial
71:                This function initialises SFRs and 
72:            	global variables
73:            *************************************************/
74:            
75:            void Initial(void)
76:            {
77:            	ADCON1 = 0x0f; //pic18f4520
7FD4  0E0F     MOVLW 0xF
7FD6  6EC1     MOVWF ADCON1, ACCESS
78:            
79:            	TRISA = 0xff;
7FD8  6892     SETF TRISA, ACCESS
80:            	TRISB = 0x00;
7FDA  0E00     MOVLW 0x0
7FDC  6E93     MOVWF TRISB, ACCESS
81:            	LATB = 0x00;
7FDE  0E00     MOVLW 0x0
7FE0  6E8A     MOVWF LATB, ACCESS
82:            }
7FE2  0012     RETURN 0
83:            
84:            
85:            void delay_1s(void)
86:            {
87:                unsigned char i;
88:                for (i=0;i<25;i++)
89:                        __delay_ms(40);  //max value is 40 since this depends on the _delay() function which has a max number of cycles
90:                
91:            }
92:            
93:            
