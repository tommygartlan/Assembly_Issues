

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Oct 12 14:22:46 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10                           	dabs	1,0x201,2,_countc
    11  0000                     
    12                           ; Version 2.00
    13                           ; Generated 27/05/2018 GMT
    14                           ; 
    15                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4520 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     
    47 ;;
    48 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    49 ;;
    50 ;; *************** function _main *****************
    51 ;; Defined at:
    52 ;;		line 38 in file "access_ram2.c"
    53 ;; Parameters:    Size  Location     Type
    54 ;;		None
    55 ;; Auto vars:     Size  Location     Type
    56 ;;  long_count      4    3[COMRAM] unsigned long 
    57 ;;  countb          2    1[COMRAM] unsigned int 
    58 ;;  count           1    0[COMRAM] unsigned char 
    59 ;; Return value:  Size  Location     Type
    60 ;;                  1    wreg      void 
    61 ;; Registers used:
    62 ;;		wreg, status,2
    63 ;; Tracked objects:
    64 ;;		On entry : 0/0
    65 ;;		On exit  : 0/0
    66 ;;		Unchanged: 0/0
    67 ;; Data sizes:     COMRAM   BANK0   BANK1  BANK2h  BANK2l   BANK3   BANK4   BANK5
    68 ;;      Params:         0       0       0       0       0       0       0       0
    69 ;;      Locals:         7       0       0       0       0       0       0       0
    70 ;;      Temps:          0       0       0       0       0       0       0       0
    71 ;;      Totals:         7       0       0       0       0       0       0       0
    72 ;;Total ram usage:        7 bytes
    73 ;; This function calls:
    74 ;;		Nothing
    75 ;; This function is called by:
    76 ;;		Startup code after reset
    77 ;; This function uses a non-reentrant model
    78 ;;
    79                           
    80                           	psect	text0
    81  007F92                     __ptext0:
    82                           	opt stack 0
    83  0000                     _TRISB	set	3987
    84  0000                     _TRISA	set	3986
    85  0000                     _ADCON1	set	4033
    86  0000                     _LATB	set	3978
    87                           
    88                           ; #config settings
    89  007F92                     _main:
    90                           	opt stack 31
    91                           
    92                           ;access_ram2.c: 43:  unsigned char count = 0;
    93                           
    94                           ;incstack = 0
    95  007F92  0E00               	movlw	0
    96  007F94  6E01               	movwf	main@count,c
    97                           
    98                           ;access_ram2.c: 44:  unsigned long long_count=0;
    99  007F96  0E00               	movlw	0
   100  007F98  6E04               	movwf	main@long_count,c
   101  007F9A  0E00               	movlw	0
   102  007F9C  6E05               	movwf	main@long_count+1,c
   103  007F9E  0E00               	movlw	0
   104  007FA0  6E06               	movwf	main@long_count+2,c
   105  007FA2  0E00               	movlw	0
   106  007FA4  6E07               	movwf	main@long_count+3,c
   107                           
   108                           ;access_ram2.c: 46:     unsigned int countb=0;
   109  007FA6  0E00               	movlw	0
   110  007FA8  6E03               	movwf	main@countb+1,c
   111  007FAA  0E00               	movlw	0
   112  007FAC  6E02               	movwf	main@countb,c
   113                           
   114                           ;access_ram2.c: 51:  count = 2;
   115  007FAE  0E02               	movlw	2
   116  007FB0  6E01               	movwf	main@count,c
   117                           
   118                           ;access_ram2.c: 52:  LATB = count;
   119  007FB2  C001  FF8A         	movff	main@count,3978	;volatile
   120                           
   121                           ;access_ram2.c: 58:  countb = 4;
   122  007FB6  0E00               	movlw	0
   123  007FB8  6E03               	movwf	main@countb+1,c
   124  007FBA  0E04               	movlw	4
   125  007FBC  6E02               	movwf	main@countb,c
   126                           
   127                           ;access_ram2.c: 59:  LATB = countb;
   128  007FBE  C002  FF8A         	movff	main@countb,3978	;volatile
   129                           
   130                           ;access_ram2.c: 71:     count = 260;
   131  007FC2  0E04               	movlw	4
   132  007FC4  6E01               	movwf	main@count,c
   133                           
   134                           ;access_ram2.c: 72:  LATB = count;
   135  007FC6  C001  FF8A         	movff	main@count,3978	;volatile
   136                           
   137                           ;access_ram2.c: 73:     LATB = count >> 8;
   138  007FCA  0E00               	movlw	0
   139  007FCC  6E8A               	movwf	3978,c	;volatile
   140                           
   141                           ;access_ram2.c: 78:     countb = 260;
   142  007FCE  0E01               	movlw	1
   143  007FD0  6E03               	movwf	main@countb+1,c
   144  007FD2  0E04               	movlw	4
   145  007FD4  6E02               	movwf	main@countb,c
   146                           
   147                           ;access_ram2.c: 79:  LATB = countb;
   148  007FD6  C002  FF8A         	movff	main@countb,3978	;volatile
   149                           
   150                           ;access_ram2.c: 80:     LATB = countb >> 8;
   151  007FDA  5003               	movf	main@countb+1,w,c
   152  007FDC  6E8A               	movwf	3978,c	;volatile
   153                           
   154                           ;access_ram2.c: 85:     long_count = 0x01020304;
   155  007FDE  0E04               	movlw	4
   156  007FE0  6E04               	movwf	main@long_count,c
   157  007FE2  0E03               	movlw	3
   158  007FE4  6E05               	movwf	main@long_count+1,c
   159  007FE6  0E02               	movlw	2
   160  007FE8  6E06               	movwf	main@long_count+2,c
   161  007FEA  0E01               	movlw	1
   162  007FEC  6E07               	movwf	main@long_count+3,c
   163                           
   164                           ;access_ram2.c: 86:     LATB = long_count;
   165  007FEE  C004  FF8A         	movff	main@long_count,3978	;volatile
   166                           
   167                           ;access_ram2.c: 87:     LATB = long_count >> 8;
   168  007FF2  C005  FF8A         	movff	main@long_count+1,3978	;volatile
   169                           
   170                           ;access_ram2.c: 88:     LATB = long_count >> 16;
   171  007FF6  C006  FF8A         	movff	main@long_count+2,3978	;volatile
   172                           
   173                           ;access_ram2.c: 89:     LATB = long_count >> 24;
   174  007FFA  C007  FF8A         	movff	main@long_count+3,3978	;volatile
   175  007FFE                     l17:
   176  007FFE  D7FF               	goto	l17
   177  008000                     __end_of_main:
   178                           	opt stack 0
   179  0000                     
   180                           	psect	cinit
   181  007F8C                     __pcinit:
   182                           	opt stack 0
   183  007F8C                     start_initialization:
   184                           	opt stack 0
   185  007F8C                     __initialization:
   186                           	opt stack 0
   187  007F8C                     end_of_initialization:
   188                           	opt stack 0
   189  007F8C                     __end_of__initialization:
   190                           	opt stack 0
   191  007F8C  0100               	movlb	0
   192  007F8E  EFC9  F03F         	goto	_main	;jump to C main() function
   193                           
   194                           	psect	cstackCOMRAM
   195  000001                     __pcstackCOMRAM:
   196                           	opt stack 0
   197  000001                     main@count:
   198                           	opt stack 0
   199                           
   200                           ; 1 bytes @ 0x0
   201  000001                     	ds	1
   202  000002                     main@countb:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x1
   206  000002                     	ds	2
   207  000004                     main@long_count:
   208                           	opt stack 0
   209                           
   210                           ; 4 bytes @ 0x3
   211  000004                     	ds	4
   212                           
   213                           	psect	rparam


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      7       7
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2h          253      0       0
    BANK2l            1      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2h

    None.

Critical Paths under _main in BANK2l

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     135
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      7       7       1        5.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2h           FD      0       0       8        0.0%
BANK2h              FD      0       0       9        0.0%
BITBANK2l            1      0       0      10        0.0%
BANK2l               1      0       0      11        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
ABS                  0      0       0      16        0.0%
BITBANK4           100      0       0      17        0.0%
BITBANK5           100      0       0      18        0.0%
BIGRAMh            3FD      0       0      19        0.0%
BIGRAMl            200      0       0      20        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Oct 12 14:22:46 2018

                     l17 7FFE              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _LATB 000F8A  
                   _main 7F92                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
                  _TRISA 000F92                    _TRISB 000F93            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000           __CFG_BOREN$OFF 000000          __initialization 7F8C  
           __end_of_main 8000                   ??_main 0001            __activetblptr 000000  
                 _ADCON1 000FC1           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 _countc 000201               __accesstop 0080  __end_of__initialization 7F8C  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000           main@long_count 0004  
                __pcinit 7F8C                  __ramtop 0600                  __ptext0 7F92  
   end_of_initialization 7F8C               main@countb 0002      start_initialization 7F8C  
       __CFG_LPT1OSC$OFF 000000        __CFG_CCP2MX$PORTC 000000         __CFG_WDTPS$32768 000000  
              main@count 0001                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 006E  
